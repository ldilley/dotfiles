# .screenrc

# Display notification when activity is detected for a window
activity "Activity detected in %t (%n)!"

# Do not show the tail end of previously opened programs such as editors
altscreen on

# Ensure the session is saved on hangup
autodetach on

# Periodically execute the defined command
# This can be used to update the status line using "%1`".
#backtick 1 0 5 /bin/date

# Display notification when bell is detected for a window
bell_msg "Bell detected in %t (%n)!"

# Set the window titles
caption always
caption string "%n %t"

# Start the session using my home directory as the working directory
chdir

# Detect activity in new windows
defmonitor on

# Set the status bar
hardstatus alwayslastline 
hardstatus string "%{= kg}[%{c}%H%? %1`%?%{g}][%= %{= kw}%-w%{+b yk} %n*%t%?(%u)%? %{-}%+w %=%{g}][%{B}%m/%d/%Y %{m}%c%{g}]"

# Start with a few named windows and configure the layout
# Navigate the windows with ctrl+a+<window_number> and areas with ctrl+a+<tab>.
# Or use the custom keybinds defined at the bottom of this file.
screen -t shell_0 0 bash # start a bash shell in the larger top area
split                    # split horizontally, creating a top and bottom area
focus down               # set focus to new bottom area
screen -t shell_1 1 bash # start another bash shell in this bottom area
split -v                 # split vertically, creating two smaller bottom areas
focus right              # set focus to new bottom-right area
screen -t htop 2 htop    # start htop in this new bottom-right area
focus top                # reset focus to the larger top area
select 0                 # ensure the larger top area is using the first bash shell

# Set this many lines of scrollback
scrollback 10000

# Disable copyright notice on startup
startup_message off

# Terminal emulation type
term screen-256color
#term xterm-256color

# Disable the visual bell to prevent the screen flash
vbell off

# Custom keybinds
# These may need to be re-defined depending on your terminal.
# You can use "showkey -a" to capture the key definitions for your terminal.
bindkey "^[[13~" prev       # F3 = previous window
bindkey "^[[14~" next       # F4 = next window
bindkey "^[[A" focus top    # ctrl+up_arrow = large top area
bindkey "^[[B" focus down   # ctrl+down_arrow = bottom-left area
bindkey "^[[C" focus bottom # ctrl+right_arrow = bottom-right area
bindkey "^[[D" focus left   # ctrl+left_arrow = back to bottom-left area from bottom-right area
